# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.bzz_chunks_pinned_chunks import BzzChunksPinnedChunks
from openapi_server import util

from openapi_server.models.bzz_chunks_pinned_chunks import BzzChunksPinnedChunks  # noqa: E501

class BzzChunksPinned(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, chunks=None):  # noqa: E501
        """BzzChunksPinned - a model defined in OpenAPI

        :param chunks: The chunks of this BzzChunksPinned.  # noqa: E501
        :type chunks: List[BzzChunksPinnedChunks]
        """
        self.openapi_types = {
            'chunks': List[BzzChunksPinnedChunks]
        }

        self.attribute_map = {
            'chunks': 'chunks'
        }

        self._chunks = chunks

    @classmethod
    def from_dict(cls, dikt) -> 'BzzChunksPinned':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BzzChunksPinned of this BzzChunksPinned.  # noqa: E501
        :rtype: BzzChunksPinned
        """
        return util.deserialize_model(dikt, cls)

    @property
    def chunks(self):
        """Gets the chunks of this BzzChunksPinned.


        :return: The chunks of this BzzChunksPinned.
        :rtype: List[BzzChunksPinnedChunks]
        """
        return self._chunks

    @chunks.setter
    def chunks(self, chunks):
        """Sets the chunks of this BzzChunksPinned.


        :param chunks: The chunks of this BzzChunksPinned.
        :type chunks: List[BzzChunksPinnedChunks]
        """

        self._chunks = chunks
