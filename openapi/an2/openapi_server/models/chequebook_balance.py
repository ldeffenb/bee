# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class ChequebookBalance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, total_balance=None, available_balance=None):  # noqa: E501
        """ChequebookBalance - a model defined in OpenAPI

        :param total_balance: The total_balance of this ChequebookBalance.  # noqa: E501
        :type total_balance: int
        :param available_balance: The available_balance of this ChequebookBalance.  # noqa: E501
        :type available_balance: int
        """
        self.openapi_types = {
            'total_balance': int,
            'available_balance': int
        }

        self.attribute_map = {
            'total_balance': 'totalBalance',
            'available_balance': 'availableBalance'
        }

        self._total_balance = total_balance
        self._available_balance = available_balance

    @classmethod
    def from_dict(cls, dikt) -> 'ChequebookBalance':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ChequebookBalance of this ChequebookBalance.  # noqa: E501
        :rtype: ChequebookBalance
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total_balance(self):
        """Gets the total_balance of this ChequebookBalance.


        :return: The total_balance of this ChequebookBalance.
        :rtype: int
        """
        return self._total_balance

    @total_balance.setter
    def total_balance(self, total_balance):
        """Sets the total_balance of this ChequebookBalance.


        :param total_balance: The total_balance of this ChequebookBalance.
        :type total_balance: int
        """

        self._total_balance = total_balance

    @property
    def available_balance(self):
        """Gets the available_balance of this ChequebookBalance.


        :return: The available_balance of this ChequebookBalance.
        :rtype: int
        """
        return self._available_balance

    @available_balance.setter
    def available_balance(self, available_balance):
        """Sets the available_balance of this ChequebookBalance.


        :param available_balance: The available_balance of this ChequebookBalance.
        :type available_balance: int
        """

        self._available_balance = available_balance
