openapi: 3.0.3
info:
  description: A list of the currently provided debug interfaces to interact with
    the bee node
  title: Bee Debug API
  version: 0.5.0
externalDocs:
  description: Browse the documentation @ the Swarm Docs
  url: https://docs.swarm.eth
servers:
- url: http://{apiRoot}:{port}
  variables:
    apiRoot:
      default: localhost
      description: Base address of the local bee node debug API
    port:
      default: "1635"
      description: Service port provided in bee node config
security:
- {}
paths:
  /addresses:
    get:
      operationId: addresses_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addresses'
          description: Own node underlay and overlay addresses
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        default:
          description: Default response
      summary: Get overlay and underlay addresses of the node
      tags:
      - Connectivity
      x-openapi-router-controller: openapi_server.controllers.connectivity_controller
  /balances:
    get:
      operationId: balances_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balances'
          description: Own balances with all known peers
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        default:
          description: Default response
      summary: Get the balances with all known peers including prepaid services
      tags:
      - Balance
      x-openapi-router-controller: openapi_server.controllers.balance_controller
  /balances/{address}:
    get:
      operationId: balances_address_get
      parameters:
      - description: Swarm address of peer
        explode: false
        in: path
        name: address
        required: true
        schema:
          $ref: '#/components/schemas/SwarmAddress'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'
          description: Balance with the specific peer
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        default:
          description: Default response
      summary: Get the balances with a specific peer including prepaid services
      tags:
      - Balance
      x-openapi-router-controller: openapi_server.controllers.balance_controller
  /blocklist:
    get:
      operationId: blocklist_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Peers'
          description: Returns overlay addresses of blocklisted peers
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        default:
          description: Default response
      summary: Get a list of blocklisted peers
      tags:
      - Connectivity
      x-openapi-router-controller: openapi_server.controllers.connectivity_controller
  /chequebook/address:
    get:
      operationId: chequebook_address_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChequebookAddress'
          description: Ethereum address of chequebook contract
      summary: Get the address of the chequebook contract used
      tags:
      - Chequebook
      x-openapi-router-controller: openapi_server.controllers.chequebook_controller
  /chequebook/balance:
    get:
      operationId: chequebook_balance_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChequebookBalance'
          description: Balance of the chequebook
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        default:
          description: Default response
      summary: Get the balance of the chequebook
      tags:
      - Chequebook
      x-openapi-router-controller: openapi_server.controllers.chequebook_controller
  /chequebook/cashout/{peer-id}:
    get:
      operationId: chequebook_cashout_peer_id_get
      parameters:
      - description: Swarm address of peer
        explode: false
        in: path
        name: peer-id
        required: true
        schema:
          $ref: '#/components/schemas/SwarmAddress'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SwapCashoutStatus'
          description: Cashout status
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        default:
          description: Default response
      summary: Get last cashout action for the peer
      tags:
      - Chequebook
      x-openapi-router-controller: openapi_server.controllers.chequebook_controller
    post:
      operationId: chequebook_cashout_peer_id_post
      parameters:
      - description: Swarm address of peer
        explode: false
        in: path
        name: peer-id
        required: true
        schema:
          $ref: '#/components/schemas/SwarmAddress'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
          description: OK
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        default:
          description: Default response
      summary: Cashout the last cheque for the peer
      tags:
      - Chequebook
      x-openapi-router-controller: openapi_server.controllers.chequebook_controller
  /chequebook/cheque:
    get:
      operationId: chequebook_cheque_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChequeAllPeersResponse'
          description: Last cheques
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        default:
          description: Default response
      summary: Get last cheques for all peers
      tags:
      - Chequebook
      x-openapi-router-controller: openapi_server.controllers.chequebook_controller
  /chequebook/cheque/{peer-id}:
    get:
      operationId: chequebook_cheque_peer_id_get
      parameters:
      - description: Swarm address of peer
        explode: false
        in: path
        name: peer-id
        required: true
        schema:
          $ref: '#/components/schemas/SwarmAddress'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChequePeerResponse'
          description: Last cheques
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        default:
          description: Default response
      summary: Get last cheques for the peer
      tags:
      - Chequebook
      x-openapi-router-controller: openapi_server.controllers.chequebook_controller
  /chequebook/deposit:
    post:
      operationId: chequebook_deposit_post
      parameters:
      - description: amount of tokens to deposit
        explode: true
        in: query
        name: amount
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
          description: Transaction hash of the deposit transaction
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        default:
          description: Default response
      summary: Deposit tokens from overlay address into chequebook
      tags:
      - Chequebook
      x-openapi-router-controller: openapi_server.controllers.chequebook_controller
  /chequebook/withdraw:
    post:
      operationId: chequebook_withdraw_post
      parameters:
      - description: amount of tokens to withdraw
        explode: true
        in: query
        name: amount
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
          description: Transaction hash of the withdraw transaction
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        default:
          description: Default response
      summary: Withdraw tokens from the chequebook to the overlay address
      tags:
      - Chequebook
      x-openapi-router-controller: openapi_server.controllers.chequebook_controller
  /chunks/{address}:
    delete:
      operationId: chunks_address_delete
      parameters:
      - description: Swarm address of chunk
        explode: false
        in: path
        name: address
        required: true
        schema:
          $ref: '#/components/schemas/SwarmAddress'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Chunk exists
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          description: Default response
      summary: Delete a chunk from local storage
      tags:
      - Chunk
      x-openapi-router-controller: openapi_server.controllers.chunk_controller
    get:
      operationId: chunks_address_get
      parameters:
      - description: Swarm address of chunk
        explode: false
        in: path
        name: address
        required: true
        schema:
          $ref: '#/components/schemas/SwarmAddress'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Chunk exists
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          description: Default response
      summary: Check if chunk at address exists locally
      tags:
      - Chunk
      x-openapi-router-controller: openapi_server.controllers.chunk_controller
  /connect/{multiAddress}:
    post:
      operationId: connect_multi_address_post
      parameters:
      - allowReserved: true
        description: Underlay address of peer
        explode: false
        in: path
        name: multiAddress
        required: true
        schema:
          $ref: '#/components/schemas/MultiAddress'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: Returns overlay address of connected peer
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        default:
          description: Default response
      summary: Connect to address
      tags:
      - Connectivity
      x-openapi-router-controller: openapi_server.controllers.connectivity_controller
  /consumed:
    get:
      operationId: consumed_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balances'
          description: Own past due consumption balances with all known peers
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        default:
          description: Default response
      summary: Get the past due consumption balances with all known peers
      tags:
      - Balance
      x-openapi-router-controller: openapi_server.controllers.balance_controller
  /consumed/{address}:
    get:
      operationId: consumed_address_get
      parameters:
      - description: Swarm address of peer
        explode: false
        in: path
        name: address
        required: true
        schema:
          $ref: '#/components/schemas/SwarmAddress'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'
          description: Past-due consumption balance with the specific peer
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        default:
          description: Default response
      summary: Get the past due consumption balance with a specific peer
      tags:
      - Balance
      x-openapi-router-controller: openapi_server.controllers.balance_controller
  /health:
    get:
      operationId: health_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Health State of node
        default:
          description: Default response
      summary: Get health of node
      tags:
      - Status
      x-openapi-router-controller: openapi_server.controllers.status_controller
  /peers:
    get:
      operationId: peers_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Peers'
          description: Returns overlay addresses of connected peers
        default:
          description: Default response
      summary: Get a list of peers
      tags:
      - Connectivity
      x-openapi-router-controller: openapi_server.controllers.connectivity_controller
  /peers/{address}:
    delete:
      operationId: peers_address_delete
      parameters:
      - description: Swarm address of peer
        explode: false
        in: path
        name: address
        required: true
        schema:
          $ref: '#/components/schemas/SwarmAddress'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Disconnected peer
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        default:
          description: Default response
      summary: Remove peer
      tags:
      - Connectivity
      x-openapi-router-controller: openapi_server.controllers.connectivity_controller
  /pingpong/{peer-id}:
    post:
      operationId: pingpong_peer_id_post
      parameters:
      - description: Swarm address of peer
        explode: false
        in: path
        name: peer-id
        required: true
        schema:
          $ref: '#/components/schemas/SwarmAddress'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RttMs'
          description: Returns round trip time for given peer
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        default:
          description: Default response
      summary: Try connection to node
      tags:
      - Connectivity
      x-openapi-router-controller: openapi_server.controllers.connectivity_controller
  /readiness:
    get:
      operationId: readiness_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Health State of node
        default:
          description: Default response
      summary: Get readiness state of node
      tags:
      - Status
      x-openapi-router-controller: openapi_server.controllers.status_controller
  /settlements:
    get:
      operationId: settlements_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settlements'
          description: Settlements with all known peers and total amount sent or received
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        default:
          description: Default response
      summary: Get settlements with all known peers and total amount sent or received
      tags:
      - Settlements
      x-openapi-router-controller: openapi_server.controllers.settlements_controller
  /settlements/{address}:
    get:
      operationId: settlements_address_get
      parameters:
      - description: Swarm address of peer
        explode: false
        in: path
        name: address
        required: true
        schema:
          $ref: '#/components/schemas/SwarmAddress'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settlement'
          description: Amount of sent or received from settlements with a peer
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        default:
          description: Default response
      summary: Get amount of sent and received from settlements with a peer
      tags:
      - Settlements
      x-openapi-router-controller: openapi_server.controllers.settlements_controller
  /tags/{uid}:
    get:
      operationId: tags_uid_get
      parameters:
      - description: Uid
        explode: false
        in: path
        name: uid
        required: true
        schema:
          $ref: '#/components/schemas/Uid'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewTagDebugResponse'
          description: Tag info
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        default:
          description: Default response
      summary: Get Tag information using Uid
      tags:
      - Tag
      x-openapi-router-controller: openapi_server.controllers.tag_controller
  /topology:
    get:
      description: Get topology of known network
      operationId: topology_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BzzTopology'
          description: Swarm topology of the bee node
      tags:
      - Connectivity
      x-openapi-router-controller: openapi_server.controllers.connectivity_controller
  /welcome-message:
    get:
      operationId: welcome_message_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WelcomeMessage'
          description: Welcome message
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        default:
          description: Default response
      summary: Get configured P2P welcome message
      tags:
      - Connectivity
      x-openapi-router-controller: openapi_server.controllers.connectivity_controller
    post:
      operationId: welcome_message_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WelcomeMessage'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: OK
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        default:
          description: Default response
      summary: Set P2P welcome message
      tags:
      - Connectivity
      x-openapi-router-controller: openapi_server.controllers.connectivity_controller
components:
  schemas:
    Addresses:
      example:
        public_key: 02ab7473879005929d10ce7d4f626412dad9fe56b0a6622038931d26bd79abf0a4
        pss_public_key: 02ab7473879005929d10ce7d4f626412dad9fe56b0a6622038931d26bd79abf0a4
        ethereum: 36b7efd913ca4cf880b8eeac5093fa27b0825906
        overlay: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
        underlay:
        - /ip4/127.0.0.1/tcp/1634/p2p/16Uiu2HAmTm17toLDaPYzRyjKn27iCB76yjKnJ5DjQXneFmifFvaX
        - /ip4/127.0.0.1/tcp/1634/p2p/16Uiu2HAmTm17toLDaPYzRyjKn27iCB76yjKnJ5DjQXneFmifFvaX
      properties:
        overlay:
          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
          pattern: ^[A-Fa-f0-9]{64}$
          type: string
        underlay:
          items:
            $ref: '#/components/schemas/P2PUnderlay'
          type: array
        ethereum:
          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906
          pattern: ^[A-Fa-f0-9]{40}$
          type: string
        public_key:
          example: 02ab7473879005929d10ce7d4f626412dad9fe56b0a6622038931d26bd79abf0a4
          pattern: ^[A-Fa-f0-9]{66}$
          type: string
        pss_public_key:
          example: 02ab7473879005929d10ce7d4f626412dad9fe56b0a6622038931d26bd79abf0a4
          pattern: ^[A-Fa-f0-9]{66}$
          type: string
      type: object
    SwarmAddress:
      example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
      pattern: ^[A-Fa-f0-9]{64}$
      type: string
    P2PUnderlay:
      example: /ip4/127.0.0.1/tcp/1634/p2p/16Uiu2HAmTm17toLDaPYzRyjKn27iCB76yjKnJ5DjQXneFmifFvaX
      type: string
    EthereumAddress:
      example: 36b7efd913ca4cf880b8eeac5093fa27b0825906
      pattern: ^[A-Fa-f0-9]{40}$
      type: string
    PublicKey:
      example: 02ab7473879005929d10ce7d4f626412dad9fe56b0a6622038931d26bd79abf0a4
      pattern: ^[A-Fa-f0-9]{66}$
      type: string
    ProblemDetails:
      type: string
    Balances:
      example:
        balances:
        - balance: 0
          peer: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
        - balance: 0
          peer: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
      properties:
        balances:
          items:
            $ref: '#/components/schemas/Balance'
          type: array
      type: object
    Balance:
      example:
        balance: 0
        peer: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
      properties:
        peer:
          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
          pattern: ^[A-Fa-f0-9]{64}$
          type: string
        balance:
          type: integer
      type: object
    Peers:
      example:
        peers:
        - address: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
        - address: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
      properties:
        peers:
          items:
            $ref: '#/components/schemas/Address'
          type: array
      type: object
    Address:
      example:
        address: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
      properties:
        address:
          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
          pattern: ^[A-Fa-f0-9]{64}$
          type: string
      type: object
    ChequebookAddress:
      example:
        chequebookaddress: 36b7efd913ca4cf880b8eeac5093fa27b0825906
      properties:
        chequebookaddress:
          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906
          pattern: ^[A-Fa-f0-9]{40}$
          type: string
      type: object
    ChequebookBalance:
      example:
        totalBalance: 0
        availableBalance: 6
      properties:
        totalBalance:
          type: integer
        availableBalance:
          type: integer
      type: object
    Response:
      example:
        code: 0
        message: message
      properties:
        message:
          type: string
        code:
          type: integer
      type: object
    MultiAddress:
      type: string
    Status:
      example:
        status: status
      properties:
        status:
          type: string
      type: object
    RttMs:
      example:
        rtt: 5.0018ms
      properties:
        rtt:
          description: Go time.Duration format
          example: 5.0018ms
          type: string
      type: object
    Duration:
      description: Go time.Duration format
      example: 5.0018ms
      type: string
    Settlement:
      example:
        peer: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
        received: 1
        sent: 5
      properties:
        peer:
          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
          pattern: ^[A-Fa-f0-9]{64}$
          type: string
        received:
          type: integer
        sent:
          type: integer
      type: object
    Settlements:
      example:
        totalreceived: 0
        settlements:
        - peer: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
          received: 1
          sent: 5
        - peer: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
          received: 1
          sent: 5
        totalsent: 6
      properties:
        totalreceived:
          type: integer
        totalsent:
          type: integer
        settlements:
          items:
            $ref: '#/components/schemas/Settlement'
          type: array
      type: object
    BzzTopology:
      example:
        connected: 6
        bins:
          key:
            connected: 2
            connectedPeers: '{}'
            disconnectedPeers: '{}'
            population: 5
        depth: 5
        baseAddr: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
        nnLowWatermark: 1
        population: 0
        timestamp: timestamp
      properties:
        baseAddr:
          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
          pattern: ^[A-Fa-f0-9]{64}$
          type: string
        population:
          type: integer
        connected:
          type: integer
        timestamp:
          type: string
        nnLowWatermark:
          type: integer
        depth:
          type: integer
        bins:
          additionalProperties:
            $ref: '#/components/schemas/BzzTopology_bins'
          type: object
      type: object
    WelcomeMessage:
      example:
        welcome_message: welcome_message
      properties:
        welcome_message:
          type: string
      type: object
    SwapCashoutStatus:
      example:
        result:
          recipient: 36b7efd913ca4cf880b8eeac5093fa27b0825906
          lastPayout: 6
          bounced: true
        beneficiary: 36b7efd913ca4cf880b8eeac5093fa27b0825906
        chequebook: 36b7efd913ca4cf880b8eeac5093fa27b0825906
        peer: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
        transactionHash: e28a34ffe7b1710c1baf97ca6d71d81b7f159a9920910876856c8d94dd7be4ae
        cumulativePayout: 0
      properties:
        peer:
          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
          pattern: ^[A-Fa-f0-9]{64}$
          type: string
        chequebook:
          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906
          pattern: ^[A-Fa-f0-9]{40}$
          type: string
        cumulativePayout:
          type: integer
        beneficiary:
          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906
          pattern: ^[A-Fa-f0-9]{40}$
          type: string
        transactionHash:
          example: e28a34ffe7b1710c1baf97ca6d71d81b7f159a9920910876856c8d94dd7be4ae
          pattern: ^[A-Fa-f0-9]{64}$
          type: string
        result:
          $ref: '#/components/schemas/SwapCashoutResult'
      type: object
    TransactionHash:
      example: e28a34ffe7b1710c1baf97ca6d71d81b7f159a9920910876856c8d94dd7be4ae
      pattern: ^[A-Fa-f0-9]{64}$
      type: string
    SwapCashoutResult:
      example:
        recipient: 36b7efd913ca4cf880b8eeac5093fa27b0825906
        lastPayout: 6
        bounced: true
      properties:
        recipient:
          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906
          pattern: ^[A-Fa-f0-9]{40}$
          type: string
        lastPayout:
          type: integer
        bounced:
          type: boolean
      type: object
    TransactionResponse:
      example:
        transactionHash: e28a34ffe7b1710c1baf97ca6d71d81b7f159a9920910876856c8d94dd7be4ae
      properties:
        transactionHash:
          example: e28a34ffe7b1710c1baf97ca6d71d81b7f159a9920910876856c8d94dd7be4ae
          pattern: ^[A-Fa-f0-9]{64}$
          type: string
      type: object
    ChequePeerResponse:
      example:
        lastreceived:
          beneficiary: 36b7efd913ca4cf880b8eeac5093fa27b0825906
          chequebook: 36b7efd913ca4cf880b8eeac5093fa27b0825906
          payout: 0
        peer: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
        lastsent:
          beneficiary: 36b7efd913ca4cf880b8eeac5093fa27b0825906
          chequebook: 36b7efd913ca4cf880b8eeac5093fa27b0825906
          payout: 0
      properties:
        peer:
          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
          pattern: ^[A-Fa-f0-9]{64}$
          type: string
        lastreceived:
          $ref: '#/components/schemas/Cheque'
        lastsent:
          $ref: '#/components/schemas/Cheque'
      type: object
    Cheque:
      example:
        beneficiary: 36b7efd913ca4cf880b8eeac5093fa27b0825906
        chequebook: 36b7efd913ca4cf880b8eeac5093fa27b0825906
        payout: 0
      properties:
        beneficiary:
          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906
          pattern: ^[A-Fa-f0-9]{40}$
          type: string
        chequebook:
          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906
          pattern: ^[A-Fa-f0-9]{40}$
          type: string
        payout:
          type: integer
      type: object
    ChequeAllPeersResponse:
      example:
        lastcheques:
        - lastreceived:
            beneficiary: 36b7efd913ca4cf880b8eeac5093fa27b0825906
            chequebook: 36b7efd913ca4cf880b8eeac5093fa27b0825906
            payout: 0
          peer: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
          lastsent:
            beneficiary: 36b7efd913ca4cf880b8eeac5093fa27b0825906
            chequebook: 36b7efd913ca4cf880b8eeac5093fa27b0825906
            payout: 0
        - lastreceived:
            beneficiary: 36b7efd913ca4cf880b8eeac5093fa27b0825906
            chequebook: 36b7efd913ca4cf880b8eeac5093fa27b0825906
            payout: 0
          peer: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
          lastsent:
            beneficiary: 36b7efd913ca4cf880b8eeac5093fa27b0825906
            chequebook: 36b7efd913ca4cf880b8eeac5093fa27b0825906
            payout: 0
      properties:
        lastcheques:
          items:
            $ref: '#/components/schemas/ChequePeerResponse'
          type: array
      type: object
    Uid:
      type: integer
    NewTagDebugResponse:
      example:
        uid: 7
        total: 0
        split: 6
        synced: 2
        address: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
        stored: 5
        startedAt: 2020-06-11T11:26:42.6969797+02:00
        sent: 5
        seen: 1
      properties:
        total:
          type: integer
        split:
          type: integer
        seen:
          type: integer
        stored:
          type: integer
        sent:
          type: integer
        synced:
          type: integer
        uid:
          type: integer
        address:
          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
          pattern: ^[A-Fa-f0-9]{64}$
          type: string
        startedAt:
          example: 2020-06-11T11:26:42.6969797+02:00
          format: date-time
          type: string
      type: object
    DateTime:
      example: 2020-06-11T11:26:42.6969797+02:00
      format: date-time
      type: string
    BzzTopology_bins:
      example:
        connected: 2
        connectedPeers: '{}'
        disconnectedPeers: '{}'
        population: 5
      properties:
        population:
          type: integer
        connected:
          type: integer
        disconnectedPeers:
          type: object
        connectedPeers:
          type: object
      type: object
