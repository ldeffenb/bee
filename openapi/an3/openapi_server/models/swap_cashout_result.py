# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
import re
from openapi_server import util

import re  # noqa: E501

class SwapCashoutResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, recipient=None, last_payout=None, bounced=None):  # noqa: E501
        """SwapCashoutResult - a model defined in OpenAPI

        :param recipient: The recipient of this SwapCashoutResult.  # noqa: E501
        :type recipient: str
        :param last_payout: The last_payout of this SwapCashoutResult.  # noqa: E501
        :type last_payout: int
        :param bounced: The bounced of this SwapCashoutResult.  # noqa: E501
        :type bounced: bool
        """
        self.openapi_types = {
            'recipient': str,
            'last_payout': int,
            'bounced': bool
        }

        self.attribute_map = {
            'recipient': 'recipient',
            'last_payout': 'lastPayout',
            'bounced': 'bounced'
        }

        self._recipient = recipient
        self._last_payout = last_payout
        self._bounced = bounced

    @classmethod
    def from_dict(cls, dikt) -> 'SwapCashoutResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SwapCashoutResult of this SwapCashoutResult.  # noqa: E501
        :rtype: SwapCashoutResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recipient(self):
        """Gets the recipient of this SwapCashoutResult.


        :return: The recipient of this SwapCashoutResult.
        :rtype: str
        """
        return self._recipient

    @recipient.setter
    def recipient(self, recipient):
        """Sets the recipient of this SwapCashoutResult.


        :param recipient: The recipient of this SwapCashoutResult.
        :type recipient: str
        """
        if recipient is not None and not re.search(r'^[A-Fa-f0-9]{40}$', recipient):  # noqa: E501
            raise ValueError("Invalid value for `recipient`, must be a follow pattern or equal to `/^[A-Fa-f0-9]{40}$/`")  # noqa: E501

        self._recipient = recipient

    @property
    def last_payout(self):
        """Gets the last_payout of this SwapCashoutResult.


        :return: The last_payout of this SwapCashoutResult.
        :rtype: int
        """
        return self._last_payout

    @last_payout.setter
    def last_payout(self, last_payout):
        """Sets the last_payout of this SwapCashoutResult.


        :param last_payout: The last_payout of this SwapCashoutResult.
        :type last_payout: int
        """

        self._last_payout = last_payout

    @property
    def bounced(self):
        """Gets the bounced of this SwapCashoutResult.


        :return: The bounced of this SwapCashoutResult.
        :rtype: bool
        """
        return self._bounced

    @bounced.setter
    def bounced(self, bounced):
        """Sets the bounced of this SwapCashoutResult.


        :param bounced: The bounced of this SwapCashoutResult.
        :type bounced: bool
        """

        self._bounced = bounced
