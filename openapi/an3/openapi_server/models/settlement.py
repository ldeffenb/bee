# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
import re
from openapi_server import util

import re  # noqa: E501

class Settlement(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, peer=None, received=None, sent=None):  # noqa: E501
        """Settlement - a model defined in OpenAPI

        :param peer: The peer of this Settlement.  # noqa: E501
        :type peer: str
        :param received: The received of this Settlement.  # noqa: E501
        :type received: int
        :param sent: The sent of this Settlement.  # noqa: E501
        :type sent: int
        """
        self.openapi_types = {
            'peer': str,
            'received': int,
            'sent': int
        }

        self.attribute_map = {
            'peer': 'peer',
            'received': 'received',
            'sent': 'sent'
        }

        self._peer = peer
        self._received = received
        self._sent = sent

    @classmethod
    def from_dict(cls, dikt) -> 'Settlement':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Settlement of this Settlement.  # noqa: E501
        :rtype: Settlement
        """
        return util.deserialize_model(dikt, cls)

    @property
    def peer(self):
        """Gets the peer of this Settlement.


        :return: The peer of this Settlement.
        :rtype: str
        """
        return self._peer

    @peer.setter
    def peer(self, peer):
        """Sets the peer of this Settlement.


        :param peer: The peer of this Settlement.
        :type peer: str
        """
        if peer is not None and not re.search(r'^[A-Fa-f0-9]{64}$', peer):  # noqa: E501
            raise ValueError("Invalid value for `peer`, must be a follow pattern or equal to `/^[A-Fa-f0-9]{64}$/`")  # noqa: E501

        self._peer = peer

    @property
    def received(self):
        """Gets the received of this Settlement.


        :return: The received of this Settlement.
        :rtype: int
        """
        return self._received

    @received.setter
    def received(self, received):
        """Sets the received of this Settlement.


        :param received: The received of this Settlement.
        :type received: int
        """

        self._received = received

    @property
    def sent(self):
        """Gets the sent of this Settlement.


        :return: The sent of this Settlement.
        :rtype: int
        """
        return self._sent

    @sent.setter
    def sent(self, sent):
        """Sets the sent of this Settlement.


        :param sent: The sent of this Settlement.
        :type sent: int
        """

        self._sent = sent
